[env]
#SSH_AUTH_SOCK = $(gpgconf --list-dirs agent-ssh-socket)
_.python.venv = { path = '.venv', create = true }
UV_PYTHON = "3.12"

[tools]
# global tool versions go here
# you can set these with `mise use -g`
fzf = "0.56.3"
go = ["1.23"]
kubectl = "1.31.4"
kubectx = ["0.9.5"]
kustomize = "5.5.0"
node = ['lts', '20', '22']
# opentofu = "1.8.7"
pre-commit = "latest"
python = ['3.11', '3.12', '3.13']
# terraform = "1.5.7"
# terragrunt = "0.69.10"
usage = "latest"
uv = "0.5.8"
# "go:github.com/gcla/termshark/v2/cmd/termshark" = ["2.4.0"]
"pipx:ansible-core" = { version = "latest", uvx_args = "--with ansible" }


# [hooks]
# enter = "echo 'mise: loading env' && mise install"

[settings]
# plugins can read the versions files used by other version managers (if enabled by the plugin)
# for example, .nvmrc in the case of node's nvm
idiomatic_version_file = true                     # enabled by default (unlike asdf)
idiomatic_version_file_disable_tools = ['python'] # disable for specific tools

# configure `mise install` to always keep the downloaded archive
always_keep_download = false # deleted after install by default
always_keep_install = false  # deleted on failure by default

# configure how frequently (in minutes) to fetch updated plugin repository changes
# this is updated whenever a new runtime is installed
# (note: this isn't currently implemented but there are plans to add it: https://github.com/jdx/mise/issues/128)
plugin_autoupdate_last_check_duration = '1 week' # set to 0 to disable updates

# config files with these prefixes will be trusted by default
trusted_config_paths = [
  '~/.config/mise/',
  '~/Projects/code/github.com/tackle-io/',
  '~/Projects/code/github.com/wrightbradley/',
  '~/Projects/code/sandbox/exp/',
]

verbose = false     # set to true to see full installation output, see `MISE_VERBOSE`
asdf_compat = false # set to true to ensure .tool-versions will be compatible with asdf, see `MISE_ASDF_COMPAT`
http_timeout = '30' # set the timeout for http requests in seconds, see `MISE_HTTP_TIMEOUT`
jobs = 4            # number of plugins or runtimes to install in parallel. The default is `4`.
raw = false         # set to true to directly pipe plugins to stdin/stdout/stderr
yes = false         # set to true to automatically answer yes to all prompts

not_found_auto_install = true # see MISE_NOT_FOUND_AUTO_INSTALL
task_output = "prefix"        # see Tasks Runner for more information
paranoid = true               # see MISE_PARANOID

shorthands_file = '~/.config/mise/shorthands.toml' # path to the shorthands file, see `MISE_SHORTHANDS_FILE`
disable_default_shorthands = false                 # disable the default shorthands, see `MISE_DISABLE_DEFAULT_SHORTHANDS`
# disable_tools = ['node']           # disable specific tools, generally used to turn off core tools

env_file = '.env' # load env vars from a dotenv file, see `MISE_ENV_FILE`

experimental = true # enable experimental features

# configure messages displayed when entering directories with config files
status = { missing_tools = "if_other_versions_installed", show_env = false, show_tools = false }

pipx.uvx = true
python.uv_venv_auto = true

# "_" is a special key for information you'd like to put into mise.toml that mise will never parse
[_]
foo = "bar"
